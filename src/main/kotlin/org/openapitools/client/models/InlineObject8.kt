/**
 * Catalog API
 *
 * Methods for collecting product/sku catalog data, categories, brands and other information. <br><br> All content that comes between {{}} keys must be replaced with the correct data before performing the request. <br><br> Common parameters that must be changed in most VTEX requests <br> {{accountName}} => Store account name <br> {{environment}} => The environment that will be called. Change for vtexcommercestable or vtexcommmercebeta <br> {{X-VTEX-API-AppKey}} => Located in the headers of the requests, user authentication key <br> {{X-VTEX-API-AppToken}} => Located in the headers of the requests, authentication password
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * @param name Category's Name
 * @param keywords Store Framework - Deprecated.  Classic CMS - Synonyms of terms related to the name given to your department or category. \"Television\", for example, can have as a substitute word like \"TV\". This field is important to make your searches more comprehensive
 * @param title Category's Page Title (SEO)
 * @param description Category's Meta Page Description (SEO)
 * @param adWordsRemarketingCode This is a legacy field. Do not take this information into consideration.
 * @param lomadeeCampaignCode This is a legacy field. Do not take this information into consideration.
 * @param fatherCategoryId ID of the parent category, apply in case of category and subcategory
 * @param globalCategoryId [Google product category](https://support.google.com/merchants/answer/6324436?hl=en#zippy=%2Cproducts-sold-on-google%2Cshopping-ads-campaigns) for Google Merchant Center
 * @param showInStoreFront Store Framework - Deprecated.  Classic CMS - When selecting this item, the category or department will appear in the top menu and the side menu of your store.  
 * @param isActive Flag to activate or deactivate category
 * @param activeStoreFrontLink Store Framework - Deprecated.  Classic CMS - When selecting this item, the category or department is active and clickable on the site for the client to navigate through it.  
 * @param showBrandFilter Store Framework - Deprecated.  Classic CMS - When selecting this item, the category or department will have a brand filter on the page.  
 * @param score Store Framework - Depracated  Value used to set the priority on the search result page.  
 * @param stockKeepingUnitSelectionMode Store Framework - Deprecated.  Classic CMS - Product display mode = Defines how SKUs will be displayed on the product page  
 */

data class InlineObject8 (

    /* Category's Name */
    @Json(name = "Name")
    val name: kotlin.String = "Home Appliances",

    /* Store Framework - Deprecated.  Classic CMS - Synonyms of terms related to the name given to your department or category. \"Television\", for example, can have as a substitute word like \"TV\". This field is important to make your searches more comprehensive */
    @Json(name = "Keywords")
    val keywords: kotlin.String? = "Kitchen, Laundry, Appliances",

    /* Category's Page Title (SEO) */
    @Json(name = "Title")
    val title: kotlin.String? = "Home Appliances",

    /* Category's Meta Page Description (SEO) */
    @Json(name = "Description")
    val description: kotlin.String? = "Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.",

    /* This is a legacy field. Do not take this information into consideration. */
    @Json(name = "AdWordsRemarketingCode")
    val adWordsRemarketingCode: kotlin.String? = null,

    /* This is a legacy field. Do not take this information into consideration. */
    @Json(name = "LomadeeCampaignCode")
    val lomadeeCampaignCode: kotlin.String? = null,

    /* ID of the parent category, apply in case of category and subcategory */
    @Json(name = "FatherCategoryId")
    val fatherCategoryId: kotlin.Int? = 2,

    /* [Google product category](https://support.google.com/merchants/answer/6324436?hl=en#zippy=%2Cproducts-sold-on-google%2Cshopping-ads-campaigns) for Google Merchant Center */
    @Json(name = "GlobalCategoryId")
    val globalCategoryId: kotlin.Int? = 0,

    /* Store Framework - Deprecated.  Classic CMS - When selecting this item, the category or department will appear in the top menu and the side menu of your store.   */
    @Json(name = "ShowInStoreFront")
    val showInStoreFront: kotlin.Boolean? = true,

    /* Flag to activate or deactivate category */
    @Json(name = "IsActive")
    val isActive: kotlin.Boolean? = true,

    /* Store Framework - Deprecated.  Classic CMS - When selecting this item, the category or department is active and clickable on the site for the client to navigate through it.   */
    @Json(name = "ActiveStoreFrontLink")
    val activeStoreFrontLink: kotlin.Boolean? = false,

    /* Store Framework - Deprecated.  Classic CMS - When selecting this item, the category or department will have a brand filter on the page.   */
    @Json(name = "ShowBrandFilter")
    val showBrandFilter: kotlin.Boolean? = false,

    /* Store Framework - Depracated  Value used to set the priority on the search result page.   */
    @Json(name = "Score")
    val score: kotlin.Int? = 3,

    /* Store Framework - Deprecated.  Classic CMS - Product display mode = Defines how SKUs will be displayed on the product page   */
    @Json(name = "StockKeepingUnitSelectionMode")
    val stockKeepingUnitSelectionMode: kotlin.String? = "SPECIFICATION"

)


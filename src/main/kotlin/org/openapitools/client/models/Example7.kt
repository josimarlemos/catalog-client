/**
 * Catalog API
 *
 * Methods for collecting product/sku catalog data, categories, brands and other information. <br><br> All content that comes between {{}} keys must be replaced with the correct data before performing the request. <br><br> Common parameters that must be changed in most VTEX requests <br> {{accountName}} => Store account name <br> {{environment}} => The environment that will be called. Change for vtexcommercestable or vtexcommmercebeta <br> {{X-VTEX-API-AppKey}} => Located in the headers of the requests, user authentication key <br> {{X-VTEX-API-AppToken}} => Located in the headers of the requests, authentication password
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * @param isPersisted 
 * @param isRemoved 
 * @param id 
 * @param productId 
 * @param isActive 
 * @param name 
 * @param height 
 * @param realHeight 
 * @param width 
 * @param realWidth 
 * @param length 
 * @param realLength 
 * @param weightKg 
 * @param realWeightKg 
 * @param modalId 
 * @param refId 
 * @param cubicWeight 
 * @param isKit 
 * @param isDynamicKit 
 * @param internalNote 
 * @param dateUpdated 
 * @param rewardValue 
 * @param commercialConditionId 
 * @param estimatedDateArrival 
 * @param flagKitItensSellApart 
 * @param manufacturerCode 
 * @param referenceStockKeepingUnitId 
 * @param position 
 * @param editionSkuId 
 * @param approvedAdminId 
 * @param editionAdminId 
 * @param activateIfPossible 
 * @param supplierCode 
 * @param measurementUnit 
 * @param unitMultiplier 
 * @param isInventoried 
 * @param isTransported 
 * @param isGiftCardRecharge 
 * @param modalType 
 */

data class Example7 (

    @Json(name = "IsPersisted")
    val isPersisted: kotlin.Boolean,

    @Json(name = "IsRemoved")
    val isRemoved: kotlin.Boolean,

    @Json(name = "Id")
    val id: kotlin.Int,

    @Json(name = "ProductId")
    val productId: kotlin.Int,

    @Json(name = "IsActive")
    val isActive: kotlin.Boolean,

    @Json(name = "Name")
    val name: kotlin.String,

    @Json(name = "Height")
    val height: java.math.BigDecimal,

    @Json(name = "RealHeight")
    val realHeight: java.math.BigDecimal?,

    @Json(name = "Width")
    val width: java.math.BigDecimal,

    @Json(name = "RealWidth")
    val realWidth: java.math.BigDecimal?,

    @Json(name = "Length")
    val length: java.math.BigDecimal,

    @Json(name = "RealLength")
    val realLength: java.math.BigDecimal?,

    @Json(name = "WeightKg")
    val weightKg: java.math.BigDecimal,

    @Json(name = "RealWeightKg")
    val realWeightKg: java.math.BigDecimal?,

    @Json(name = "ModalId")
    val modalId: kotlin.Int,

    @Json(name = "RefId")
    val refId: kotlin.String,

    @Json(name = "CubicWeight")
    val cubicWeight: java.math.BigDecimal,

    @Json(name = "IsKit")
    val isKit: kotlin.Boolean,

    @Json(name = "IsDynamicKit")
    val isDynamicKit: kotlin.String?,

    @Json(name = "InternalNote")
    val internalNote: kotlin.String?,

    @Json(name = "DateUpdated")
    val dateUpdated: kotlin.String,

    @Json(name = "RewardValue")
    val rewardValue: java.math.BigDecimal?,

    @Json(name = "CommercialConditionId")
    val commercialConditionId: kotlin.Int,

    @Json(name = "EstimatedDateArrival")
    val estimatedDateArrival: kotlin.String?,

    @Json(name = "FlagKitItensSellApart")
    val flagKitItensSellApart: kotlin.Boolean,

    @Json(name = "ManufacturerCode")
    val manufacturerCode: kotlin.String,

    @Json(name = "ReferenceStockKeepingUnitId")
    val referenceStockKeepingUnitId: kotlin.String?,

    @Json(name = "Position")
    val position: kotlin.Int,

    @Json(name = "EditionSkuId")
    val editionSkuId: kotlin.String?,

    @Json(name = "ApprovedAdminId")
    val approvedAdminId: kotlin.Int,

    @Json(name = "EditionAdminId")
    val editionAdminId: kotlin.Int,

    @Json(name = "ActivateIfPossible")
    val activateIfPossible: kotlin.Boolean,

    @Json(name = "SupplierCode")
    val supplierCode: kotlin.String?,

    @Json(name = "MeasurementUnit")
    val measurementUnit: kotlin.String,

    @Json(name = "UnitMultiplier")
    val unitMultiplier: java.math.BigDecimal,

    @Json(name = "IsInventoried")
    val isInventoried: kotlin.String?,

    @Json(name = "IsTransported")
    val isTransported: kotlin.String?,

    @Json(name = "IsGiftCardRecharge")
    val isGiftCardRecharge: kotlin.String?,

    @Json(name = "ModalType")
    val modalType: kotlin.String?

)


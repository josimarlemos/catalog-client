/**
 * Catalog API
 *
 * Methods for collecting product/sku catalog data, categories, brands and other information. <br><br> All content that comes between {{}} keys must be replaced with the correct data before performing the request. <br><br> Common parameters that must be changed in most VTEX requests <br> {{accountName}} => Store account name <br> {{environment}} => The environment that will be called. Change for vtexcommercestable or vtexcommmercebeta <br> {{X-VTEX-API-AppKey}} => Located in the headers of the requests, user authentication key <br> {{X-VTEX-API-AppToken}} => Located in the headers of the requests, authentication password
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * @param name Category name
 * @param keywords Substitute words for the Category
 * @param title Text used in title tag for Category page
 * @param description Text used in meta description tag for Category page
 * @param adWordsRemarketingCode This is a legacy field. Do not take this information into consideration.
 * @param lomadeeCampaignCode This is a legacy field. Do not take this information into consideration.
 * @param fatherCategoryId ID of the parent category, apply in case of category and subcategory
 * @param globalCategoryId google_product_category for Google Merchant Center
 * @param showInStoreFront If true, Category is shown in the top and side menu
 * @param isActive If true, Category page becomes available in store
 * @param activeStoreFrontLink If true, Category links become active in store
 * @param showBrandFilter If true, Category page displays a Brand filter
 * @param score Score for search sorting order
 * @param stockKeepingUnitSelectionMode Product display mode 
 */

data class InlineObject7 (

    /* Category name */
    @Json(name = "Name")
    val name: kotlin.String = "Home Appliances",

    /* Substitute words for the Category */
    @Json(name = "Keywords")
    val keywords: kotlin.String = "Kitchen, Laundry, Appliances",

    /* Text used in title tag for Category page */
    @Json(name = "Title")
    val title: kotlin.String = "Home Appliances",

    /* Text used in meta description tag for Category page */
    @Json(name = "Description")
    val description: kotlin.String = "Discover our range of home appliances. Find smart vacuums, kitchen and laundry appliances to suit your needs. Order online now.",

    /* This is a legacy field. Do not take this information into consideration. */
    @Json(name = "AdWordsRemarketingCode")
    val adWordsRemarketingCode: kotlin.String,

    /* This is a legacy field. Do not take this information into consideration. */
    @Json(name = "LomadeeCampaignCode")
    val lomadeeCampaignCode: kotlin.String,

    /* ID of the parent category, apply in case of category and subcategory */
    @Json(name = "FatherCategoryId")
    val fatherCategoryId: kotlin.Int? = 2,

    /* google_product_category for Google Merchant Center */
    @Json(name = "GlobalCategoryId")
    val globalCategoryId: kotlin.Int = 222,

    /* If true, Category is shown in the top and side menu */
    @Json(name = "ShowInStoreFront")
    val showInStoreFront: kotlin.Boolean = true,

    /* If true, Category page becomes available in store */
    @Json(name = "IsActive")
    val isActive: kotlin.Boolean = true,

    /* If true, Category links become active in store */
    @Json(name = "ActiveStoreFrontLink")
    val activeStoreFrontLink: kotlin.Boolean = true,

    /* If true, Category page displays a Brand filter */
    @Json(name = "ShowBrandFilter")
    val showBrandFilter: kotlin.Boolean = true,

    /* Score for search sorting order */
    @Json(name = "Score")
    val score: kotlin.Int = 3,

    /* Product display mode  */
    @Json(name = "StockKeepingUnitSelectionMode")
    val stockKeepingUnitSelectionMode: kotlin.String = "SPECIFICATION"

)


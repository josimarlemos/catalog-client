/**
 * Catalog API
 *
 * Methods for collecting product/sku catalog data, categories, brands and other information. <br><br> All content that comes between {{}} keys must be replaced with the correct data before performing the request. <br><br> Common parameters that must be changed in most VTEX requests <br> {{accountName}} => Store account name <br> {{environment}} => The environment that will be called. Change for vtexcommercestable or vtexcommmercebeta <br> {{X-VTEX-API-AppKey}} => Located in the headers of the requests, user authentication key <br> {{X-VTEX-API-AppToken}} => Located in the headers of the requests, authentication password
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * @param name Brand's name
 * @param keywords Store Framework - Deprecated.  Classic CMS - Alternative search terms that will lead to the specific brand. The user can find the desired brand even when misspelling it. Used especially when words are of foreign origin and have a distinct spelling that is transcribed into a generic one, or when small spelling mistakes occur.  
 * @param text Brand's Meta Tag Description
 * @param siteTitle Brands's Page Title (SEO)
 * @param adWordsRemarketingCode This is a legacy field. Do not take this information into consideration.
 * @param lomadeeCampaignCode This is a legacy field. Do not take this information into consideration.
 * @param score Store Framework - Depracated  Value used to set the priority on the search result page  
 * @param menuHome Store Framework - Deprecated.  Classic CMS - Brand appears in the Department Menu control (`<vtex.cmc:departmentNavigator/>`)  
 * @param active Flag to activate or deactivate brand
 * @param linkID Brand page slug
 */

data class InlineObject9 (

    /* Brand's name */
    @Json(name = "Name")
    val name: kotlin.String = "Adidas",

    /* Store Framework - Deprecated.  Classic CMS - Alternative search terms that will lead to the specific brand. The user can find the desired brand even when misspelling it. Used especially when words are of foreign origin and have a distinct spelling that is transcribed into a generic one, or when small spelling mistakes occur.   */
    @Json(name = "Keywords")
    val keywords: kotlin.String? = "adidas",

    /* Brand's Meta Tag Description */
    @Json(name = "Text")
    val text: kotlin.String? = "Adidas",

    /* Brands's Page Title (SEO) */
    @Json(name = "SiteTitle")
    val siteTitle: kotlin.String? = "Adidas",

    /* This is a legacy field. Do not take this information into consideration. */
    @Json(name = "AdWordsRemarketingCode")
    val adWordsRemarketingCode: kotlin.String? = null,

    /* This is a legacy field. Do not take this information into consideration. */
    @Json(name = "LomadeeCampaignCode")
    val lomadeeCampaignCode: kotlin.String? = null,

    /* Store Framework - Depracated  Value used to set the priority on the search result page   */
    @Json(name = "Score")
    val score: kotlin.Int? = 10,

    /* Store Framework - Deprecated.  Classic CMS - Brand appears in the Department Menu control (`<vtex.cmc:departmentNavigator/>`)   */
    @Json(name = "MenuHome")
    val menuHome: kotlin.Boolean? = true,

    /* Flag to activate or deactivate brand */
    @Json(name = "Active")
    val active: kotlin.Boolean? = true,

    /* Brand page slug */
    @Json(name = "LinkID")
    val linkID: kotlin.String? = ""

)


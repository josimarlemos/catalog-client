/**
 * Catalog API
 *
 * Methods for collecting product/sku catalog data, categories, brands and other information. <br><br> All content that comes between {{}} keys must be replaced with the correct data before performing the request. <br><br> Common parameters that must be changed in most VTEX requests <br> {{accountName}} => Store account name <br> {{environment}} => The environment that will be called. Change for vtexcommercestable or vtexcommmercebeta <br> {{X-VTEX-API-AppKey}} => Located in the headers of the requests, user authentication key <br> {{X-VTEX-API-AppToken}} => Located in the headers of the requests, authentication password
 *
 * The version of the OpenAPI document: 1.0
 * 
 *
 * Please note:
 * This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * Do not edit this file manually.
 */

@file:Suppress(
    "ArrayInDataClass",
    "EnumEntryName",
    "RemoveRedundantQualifierName",
    "UnusedImport"
)

package org.openapitools.client.models


import com.squareup.moshi.Json

/**
 * 
 *
 * @param name SKU Service Type Name. Maximum of 100 characters
 * @param isActive If the SKU Service Type is active or not
 * @param showOnProductFront Deprecated
 * @param showOnCartFront If the SKU Service Type is displayed  on the cart screen
 * @param showOnAttachmentFront If the SKU Service Type has an attachment
 * @param showOnFileUpload If the SKU Service Type can be associated with an attachment or not
 * @param isGiftCard If the SKU Service Type is displayed as a Gift Card
 * @param isRequired If the SKU Service type mandatory
 */

data class RequestBody9 (

    /* SKU Service Type Name. Maximum of 100 characters */
    @Json(name = "Name")
    val name: kotlin.String = "Test API Sku Services",

    /* If the SKU Service Type is active or not */
    @Json(name = "IsActive")
    val isActive: kotlin.Boolean = true,

    /* Deprecated */
    @Json(name = "ShowOnProductFront")
    @Deprecated(message = "This property is deprecated.")
    val showOnProductFront: kotlin.Boolean,

    /* If the SKU Service Type is displayed  on the cart screen */
    @Json(name = "ShowOnCartFront")
    val showOnCartFront: kotlin.Boolean = false,

    /* If the SKU Service Type has an attachment */
    @Json(name = "ShowOnAttachmentFront")
    val showOnAttachmentFront: kotlin.Boolean = false,

    /* If the SKU Service Type can be associated with an attachment or not */
    @Json(name = "ShowOnFileUpload")
    val showOnFileUpload: kotlin.Boolean = false,

    /* If the SKU Service Type is displayed as a Gift Card */
    @Json(name = "IsGiftCard")
    val isGiftCard: kotlin.Boolean = false,

    /* If the SKU Service type mandatory */
    @Json(name = "IsRequired")
    val isRequired: kotlin.Boolean = false

)

